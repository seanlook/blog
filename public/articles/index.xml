<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Sean&#39;s Note</title>
    <link>http://localhost:1313/articles/</link>
    <description>Recent content in Posts on Sean&#39;s Note</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Feb 2025 18:33:06 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/articles/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My First Post</title>
      <link>http://localhost:1313/posts/2025/02/my-first-post/</link>
      <pubDate>Mon, 10 Feb 2025 18:33:06 +0800</pubDate>
      <guid>http://localhost:1313/posts/2025/02/my-first-post/</guid>
      <description>&lt;p&gt;aaa&lt;/p&gt;
&lt;h1 id=&#34;no1&#34;&gt;no.1&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;aa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;a
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;a
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;a
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;a
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;aaaa&#34;&gt;aaaa&lt;/h2&gt;
&lt;p&gt;dfdf
d
d
d
d
d
d
d
d
d
d
d
d
d
d
d
d
dd&lt;/p&gt;
&lt;p&gt;d
d
d
d
d
d
d
d
d&lt;/p&gt;
&lt;h3 id=&#34;dfsdfds&#34;&gt;dfsdfds&lt;/h3&gt;
&lt;p&gt;jdfdf&lt;/p&gt;
&lt;h2 id=&#34;bbbb&#34;&gt;bbbb&lt;/h2&gt;
&lt;p&gt;dd&lt;/p&gt;
&lt;p&gt;d&lt;/p&gt;
&lt;p&gt;d
df
df
d
fd
f
d
fd
f
d
fd&lt;/p&gt;
&lt;p&gt;d
fd
f
d
fd
f
d
fd
f
d
fd
f
d
fd
f&lt;/p&gt;</description>
    </item>
    <item>
      <title>Two Post</title>
      <link>http://localhost:1313/posts/2025/02/two-post/</link>
      <pubDate>Mon, 10 Feb 2025 18:33:06 +0800</pubDate>
      <guid>http://localhost:1313/posts/2025/02/two-post/</guid>
      <description>&lt;p&gt;aaa&lt;/p&gt;</description>
    </item>
    <item>
      <title>我为何厌恶百度的产品</title>
      <link>http://localhost:1313/posts/2015/02/%E6%88%91%E4%B8%BA%E4%BD%95%E5%8E%8C%E6%81%B6%E7%99%BE%E5%BA%A6%E7%9A%84%E4%BA%A7%E5%93%81/</link>
      <pubDate>Sat, 28 Feb 2015 15:21:25 +0000</pubDate>
      <guid>http://localhost:1313/posts/2015/02/%E6%88%91%E4%B8%BA%E4%BD%95%E5%8E%8C%E6%81%B6%E7%99%BE%E5%BA%A6%E7%9A%84%E4%BA%A7%E5%93%81/</guid>
      <description>&lt;p&gt;今天因为使用百度云同步盘出错，导致我的文件永远丢失，忍无可忍&lt;strong&gt;又&lt;/strong&gt;给“百度倾听”发了条牢骚。&lt;/p&gt;
&lt;p&gt;事情是这样的，我在 MarkdownPad2 修改最近写的3篇文章，文章正好在百度云同步盘的同步目录下，因为一直养成了一边编辑一边&lt;code&gt;Ctrl+S&lt;/code&gt;保存的习惯，难道由于这3篇文章反复修改，百度云同步盘竟然支撑不住？弹出窗口大概是说同步出错，需要重启应用（近期出现过好几次），随手点了个确定，MarkdownPad2提示我当前编辑的文件不存在，是否继续保留在窗口，反正文章修改完了，也没多想，duang，悲剧发生了，两个小星期的成果都不见了。还在失落当中……&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux-web_server&#34;&gt;title: apache+3tomcat+jk+memcached集群环境搭建
date: 2014-10-29 10:21:25
updated: 2014-11-01 00:46:23
tags: [apache, tomcat, 集群, mod_jk, memcached, centos]
categories: [Linux, Web_Server]&lt;/h2&gt;
&lt;p&gt;注意本文不讨论原理，只讲述具体的搭建过程，而且步骤都经过了整理，否则过程可能会出现其他异常，请自行google。apache与tomcat整合的方式除了jk之外，使用apache自带的mod_ajp_proxy模块也可以很方便的完成。
先来看一下架构图：
&lt;img alt=&#34;apache_tomcat_cluster_msm&#34; loading=&#34;lazy&#34; src=&#34;http://sean-images.qiniudn.com/apache_tomcat_cluster_msm.png&#34;&gt;
属于正式环境中原session复制方案的改进。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-virtualization-docker&#34;&gt;title: 搭建docker内网私服（docker-registry with nginx&amp;amp;ssl on centos）
date: 2014-11-13 20:21:25
updated: 2014-12-25 15:46:23
tags: [docker, centos, docker-registry, nginx, ssl]
categories: [Virtualization, Docker]&lt;/h2&gt;
&lt;p&gt;主要思路：
&lt;img alt=&#34;docker-registry-deploy&#34; loading=&#34;lazy&#34; src=&#34;http://sean-images.qiniudn.com/docker-registry-deploy.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-docker-registry-说明&#34;&gt;1. Docker Registry 说明&lt;/h2&gt;
&lt;p&gt;关于如何创建和使用本地仓库，其实已经有很多文章介绍了。因为docker技术正处于发展和完善阶段，所以有些文章要么内容已经过时，要么给出了错误的配置，导致无法正常创建仓库。本文记录的是个人完整的搭建过程，&lt;code&gt;docker version&lt;/code&gt;为1.1.2。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux-docker&#34;&gt;title: docker常用管理命令（上）
date: 2014-10-31 20:21:25
updated: 2014-11-05 15:46:23
tags: [docker, command]
categories: [Linux, Docker]&lt;/h2&gt;
&lt;p&gt;本文只记录docker命令在大部分情境下的使用，如果想了解每一个选项的细节，请参考官方文档，这里只作为自己以后的备忘记录下来。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-virtualization-docker&#34;&gt;title: docker常用管理命令（下）
date: 2014-11-05 16:21:25
updated: 2014-11-05 19:46:23
tags: [docker, command,linux]
categories: [Virtualization, Docker]&lt;/h2&gt;
&lt;p&gt;本文承接&lt;a href=&#34;http://seanlook.com/2014/10/31/docker-command-best-use-1/&#34;&gt;docker专题(2)：docker常用管理命令（上）&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;1-开启停止重启containerstartstoprestart&#34;&gt;1. 开启/停止/重启container（start/stop/restart）&lt;/h3&gt;
&lt;p&gt;容器可以通过&lt;code&gt;run&lt;/code&gt;新建一个来运行，也可以重新&lt;code&gt;start&lt;/code&gt;已经停止的container，但&lt;code&gt;start&lt;/code&gt;不能够再指定容器启动时运行的指令，因为docker只能有一个前台进程。
容器stop（或&lt;code&gt;Ctrl+D&lt;/code&gt;）时，会在保存当前容器的状态之后退出，下次start时保有上次关闭时更改。而且每次进入&lt;code&gt;attach&lt;/code&gt;进去的界面是一样的，与第一次run启动或commit提交的时刻相同。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-virtualization-docker&#34;&gt;title: 【转+改】Docker核心技术预览
date: 2014-12-18 13:21:25
updated: 2014-12-18 15:46:23
tags: [docker, linux, lxc, cgroup, aufs]
categories: [Virtualization, Docker]&lt;/h2&gt;
&lt;p&gt;本文简单介绍docker使用到的部分核心技术，但不做深入探究，因为每一个技术都是一个独立的项目，有机会再分别详细介绍。
来源地址：http://www.infoq.com/cn/articles/docker-core-technology-preview&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-virtualization-docker&#34;&gt;title: 在 CentOS 6.x上安装 docker.io成功
date: 2014-10-26 19:45:25
updated: 2014-10-27 10:46:23
tags: [docker, centos,linux]
categories: [Virtualization, Docker]&lt;/h2&gt;
&lt;p&gt;docker是什么就不多说了，见&lt;a href=&#34;http://seanlook.com/2014/12/18/docker-introduction/&#34;&gt;docker基础原理介绍&lt;/a&gt;。
docker容器最早受到RHEL完善的支持是从最近的CentOS 7.0开始的，官方说明是只能运行于64位架构平台，内核版本为2.6.32-431及以上（即&amp;gt;=CentOS 6.5，运行docker时实际提示3.8.0及以上），升级内核请参考&lt;a href=&#34;http://seanlook.com/2014/10/24/upgrade-centos6_kernel-to-3.10.x/&#34;&gt;CentOS 6.x 内核升级（2.6.32 -&amp;gt; 3.10.58）过程记录&lt;/a&gt;
需要注意的是CentOS 6.5与7.0的安装是有一点点不同的，CentOS-6上docker的安装包叫docker-io，并且来源于Fedora epel库，这个仓库维护了大量的没有包含在发行版中的软件，所以先要安装EPEL，而CentOS-7的docker直接包含在官方镜像源的Extras仓库（CentOS-Base.repo下的[extras]节enable=1启用）。前提是都需要联网，具体安装过程如下。
###1. 禁用selinux###&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-virtualization-docker&#34;&gt;title: Docker简介
date: 2014-12-18 11:21:25
updated: 2014-12-18 18:46:23
tags: [docker, linux]
categories: [Virtualization, Docker]&lt;/h2&gt;
&lt;h1 id=&#34;1-docker是什么&#34;&gt;1. docker是什么&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Docker is an open-source engine that automates the deployment of any application as a lightweight, portable, self-sufficient container that will run virtually anywhere.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;是 PaaS 提供商&lt;a href=&#34;https://www.dotcloud.com/&#34;&gt;dotCloud&lt;/a&gt;开源的一个基于 LXC 的高级容器引擎， &lt;a href=&#34;https://github.com/docker/docker&#34;&gt;源代码&lt;/a&gt;托管在 Github 上, 基于go语言并遵从Apache2.0协议开源。Docker近期非常火热，无论是从 GitHub 上的代码活跃度，还是Redhat宣布在&lt;a href=&#34;http://server.cnw.com.cn/server-os/htm2014/20140616_303249.shtml&#34;&gt;RHEL7中正式支持Docker&lt;/a&gt;，都给业界一个信号，这是一项创新型的技术解决方案。就连 Google 公司的 Compute Engine 也支持 docker 在其之上运行，国内“BAT”先锋企业百度Baidu App Engine(BAE)平台也是&lt;a href=&#34;http://blog.docker.com/2013/12/baidu-using-docker-for-its-paas/&#34;&gt;以Docker作为其PaaS云基础&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-virtualization-docker&#34;&gt;title: docker如何创建一个运行后台进程的容器并同时提供shell终端
date: 2014-11-03 20:21:25
updated: 2014-11-07 15:46:23
tags: [docker, shell, linux]
categories: [Virtualization, Docker]&lt;/h2&gt;
&lt;p&gt;只看标题还不是很明显，本文实现docker的这样一种比较常用的功能：通过&lt;code&gt;docker run&lt;/code&gt;启动一个容器后，容器中已经运行了一个后台进程（这里以监听80端口的nginx为例），同时进入一个shell终端可供操作，而不受限于只能在前台运行nginx与运行shell终端之间的一种。这个例子实现了，那么其他类似的运行多任务docker就可以以此类推。另外本文还提供了一种在docker容器内部安装软件（&lt;code&gt;vim&lt;/code&gt;）的方法，对于定制自己需要的镜像大有帮助。
你可能需要先阅读&lt;a href=&#34;hhttp://seanlook.com/2014/10/31/docker-command-best-use-1/&#34;&gt;docker专题(2)：docker常用管理命令（上）&lt;/a&gt;、&lt;a href=&#34;http://seanlook.com/2014/11/05/docker-command-best-use-2/&#34;&gt;docker专题(2)：docker常用管理命令（下）&lt;/a&gt;来理解更多。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-virtualization-docker&#34;&gt;title: Docker集中化web界面管理平台shipyard
date: 2014-12-29 13:21:25
updated: 2014-12-29 15:46:23
tags: [docker, linux, shipyard]
categories: [Virtualization, Docker]&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://shipyard-project.com/&#34;&gt;Shipyard&lt;/a&gt;（&lt;a href=&#34;https://github.com/shipyard/shipyard&#34;&gt;github&lt;/a&gt;）是建立在docker集群管理工具&lt;a href=&#34;https://github.com/citadel/citadel&#34;&gt;Citadel&lt;/a&gt;之上的可以管理容器、主机等资源的web图形化工具。包括&lt;a href=&#34;https://github.com/shipyard/shipyard&#34;&gt;core&lt;/a&gt;和&lt;a href=&#34;https://github.com/shipyard/shipyard-extensions&#34;&gt;extension&lt;/a&gt;两个版本，core即shipyard主要是把多个 Docker host上的 containers 统一管理（支持跨越多个host），extension即shipyard-extensions添加了应用路由和负载均衡、集中化日志、部署等。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-virtualization-docker&#34;&gt;title: Dockerfile指令详解
date: 2014-11-17 15:21:25
updated: 2014-11-17 15:46:23
tags: [docker, dockerfile, linux]
categories: [Virtualization, Docker]&lt;/h2&gt;
&lt;p&gt;Docker可以从&lt;code&gt;Dockerfile&lt;/code&gt;中一步一步的读取指令来自动的创建镜像，常使用Dockerfile来创建用户自定义的镜像。格式如下：&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-feel&#34;&gt;title: 只怕时间走的太过匆忙，忘记了躲在角落中的我
date: 2014-12-31 00:21:25
updated: 2014-12-31 00:46:23
tags: [feelings, 总结]
categories: Feel&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;青春是一道明媚的伤痕，疼的酣畅淋漓，走的跌跌撞撞，她不顾一切遍体鳞伤，但仍庆幸，生命中仍有人为她执着与疯狂。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-github&#34;&gt;title: 完全解决Github Pages邮件两次warning（DNS解析问题）
date: 2014-11-08 01:21:25
updated: 2014-11-09 00:46:23
tags: [github,troubleshooting]
categories: Github&lt;/h2&gt;
&lt;p&gt;之所以有本文是由于Github前后两次发了2封不同的警告邮件，都是关于DNS配置的。因为&lt;code&gt;seanlook.com&lt;/code&gt;刚申请下来时我也是参考其他博客，在&lt;code&gt;seanlook.github.com&lt;/code&gt;仓库下面建立了一个&lt;code&gt;CNAME&lt;/code&gt;文件，内容：&lt;code&gt;seanlook.com&lt;/code&gt;，然后去DNSPod绑定域名和IP（207.97.227.245）访问也就没事了。然而几天之后每次deploy博客的时候都会受到一封&lt;code&gt;build warning&lt;/code&gt;邮件（见本文最后），后来参考下面的文章：&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux&#34;&gt;title: iptables常用实例备查（更新中）
date: 2014-02-26 01:21:25
updated: 2014-02-26-12 00:46:23
tags: [iptables,安全]
categories: Linux&lt;/h2&gt;
&lt;h2 id=&#34;1-普通规则&#34;&gt;1. 普通规则&lt;/h2&gt;
&lt;h3 id=&#34;11-操作规则&#34;&gt;1.1 操作规则&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iptables -nL&lt;/code&gt;
查看本机关于iptables的设置情况，默认查看的是&lt;code&gt;-t filter&lt;/code&gt;，可以指定&lt;code&gt;-t nat&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux&#34;&gt;title: iptables防火墙原理详解
date: 2014-02-23 01:21:25
updated: 2014-02-23-12 00:46:23
tags: [iptables,安全]
categories: Linux&lt;/h2&gt;
&lt;h1 id=&#34;1-netfilter与iptables&#34;&gt;1. netfilter与iptables&lt;/h1&gt;
&lt;p&gt;Netfilter是由Rusty Russell提出的Linux 2.4内核防火墙框架，该框架既简洁又灵活，可实现安全策略应用中的许多功能，如数据包过滤、数据包处理、地址伪装、透明代理、动态网络地址转换(Network Address Translation，NAT)，以及基于用户及媒体访问控制(Media Access Control，MAC)地址的过滤和基于状态的过滤、包速率限制等。Iptables/Netfilter的这些规则可以通过灵活组合，形成非常多的功能、涵盖各个方面，这一切都得益于它的优秀设计思想。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux&#34;&gt;title: 在Linux上使用logwatch分析监控日志文件
date: 2014-08-23 01:21:25
updated: 2014-08-23 10:46:23
tags: [logwatch, linux,日志]
categories: [Linux]&lt;/h2&gt;
&lt;h1 id=&#34;1-介绍&#34;&gt;1. 介绍&lt;/h1&gt;
&lt;p&gt;在维护Linux服务器时，经常需要查看系统中各种服务的日志，以检查服务器的运行状态。 如登陆历史、邮件、软件安装等日志。系统管理员一个个去检查会十分不方便；且大多时候，这会是一种被动的检查，即只有在发现系统运行异常时才会想到去查看日志以获取异常的信息。那么如何主动、集中的分析这些日志，并产生报告，定时发送给管理员就会显得十分重要。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux&#34;&gt;title: linux进程后台运行的几种方式
date: 2014-02-20 11:21:25
updated: 2014-02-20 18:46:23
tags: [linux, shell, 后台进程,screen]
categories: Linux&lt;/h2&gt;
&lt;h2 id=&#34;ctrlzbgnohupsetsid&#34;&gt;Ctrl+z/bg/nohup/setsid/&amp;amp;&lt;/h2&gt;
&lt;p&gt;在Linux中，如果要让进程在后台运行，一般情况下，我们在命令后面加上&amp;amp;即可，实际上，这样是将命令放入到一个作业队列中了：&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux&#34;&gt;title: CentOS 6 服务器安全配置指南（通用）
date: 2014-09-07 01:21:25
updated: 2014-09-07-12 00:46:23
tags: [安全,ssh]
categories: Linux&lt;/h2&gt;
&lt;p&gt;Linux是一个开放式系统，可以在网络上找到许多现成的程序和工具，这既方便了用户，也方便了黑客，因为他们也能很容易地找到程序和工具来潜入Linux系统，或者盗取Linux系统上的重要信息。不过，只要我们仔细地设定Linux的各种系统功能，并且加上必要的安全措施，就能让黑客们无机可乘。一般来说，对Linux系统的安全设定包括取消不必要的服务、限制远程存取、隐藏重要资料、修补安全漏洞、采用安全工具以及经常性的安全检查等。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-tomcat&#34;&gt;title: 管理多tomcat服务shell脚本（CentOS）
date: 2014-10-29 18:21:25
updated: 2014-10-29 11:46:23
tags: [tomcat, script, shell]
categories: Tomcat&lt;/h2&gt;
&lt;p&gt;该脚本改自csdn上的一个shell，忘记出处了，只记得它能够简单的通过&lt;code&gt;service tomcat [stop|start|restart]&lt;/code&gt;来方便的管理Linux服务器上的tomcat，这可以满足大部分人的需求，然而并不适合我所管理的CentOS上的tomcat应用：通过端口区分的3台tomcat集群。如果每一次管理tomcat或查看日志，都&lt;code&gt;cd /apps/test/tomcat0/log/&lt;/code&gt;然后切换到另外一个&lt;code&gt;cd ../../&lt;/code&gt;或&lt;code&gt;cd /apps/test/tomcat1/log/&lt;/code&gt;，麻烦至极。因此“懒人”创造了这个脚本&lt;code&gt;tomcat&lt;/code&gt;：&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-mysql&#34;&gt;title: MySQL增量备份与恢复实例
date: 2014-12-05 09:21:25
updated: 2014-05 17:00:46:23
tags: [mysql, database, binlog, backup]
categories: MySQL&lt;/h2&gt;
&lt;p&gt;小量的数据库可以每天进行完整备份，因为这也用不了多少时间，但当数据库很大时，就不太可能每天进行一次完整备份了，这时候就可以使用增量备份。增量备份的原理就是使用了mysql的binlog日志。
本次操作的MySQL版本为&lt;code&gt;5.5.40 for Linux (x86_64)&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-mysql&#34;&gt;title: MySQL备份命令mysqldump参数说明与示例
date: 2014-12-05 20:21:25
updated: 2014-07 17:00:46:23
tags: [mysql, database, mysqldump, backup]
categories: MySQL&lt;/h2&gt;
&lt;h3 id=&#34;1-语法选项说明&#34;&gt;1. 语法选项说明&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-h, --host=name&lt;/code&gt;
主机名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-P[ port_num], --port=port_num&lt;/code&gt;
用于连接MySQL服务器的的TCP/IP端口号&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux&#34;&gt;title: 记一次错误卸载软件包导致Linux系统崩溃的修复解决过程
date: 2014-11-03 01:21:25
updated: 2014-11-07 00:46:23
tags: [linux, 系统管理,troubleshooting]
categories: Linux&lt;/h2&gt;
&lt;p&gt;首先问题产生的缘由很简单，是我一同事在安装oracle一套软件时，按照要求需要binutils软件包的32位版本，然而在Oracle Linux已经装有64位，按理说是可以安装i686的，我猜应该是32位的版本低于这个已有的64位所以导致冲突而安装失败，因此同事就用&lt;code&gt;yum remove binutils&lt;/code&gt;，这个命令也奇葩，由于是root权限导致依赖于它的200多个软件包也被卸载，最终导致网络断开，系统崩溃，在vSphere虚拟机上重新启动发现再也起不来。下面看问题：&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-安全&#34;&gt;title: OpenSSL 与 SSL 数字证书概念贴
date: 2015-01-15 01:21:25
updated: 2015-01-15 10:46:23
tags: [openssl, ssl,加密]
categories: 安全&lt;/h2&gt;
&lt;p&gt;SSL/TLS 介绍见文章 &lt;a href=&#34;http://seanlook.com/2015/01/07/tls-ssl&#34;&gt;SSL/TLS原理详解&lt;/a&gt;。
如果你想快速自建CA然后签发数字证书，请移步 &lt;a href=&#34;http://seanlook.com/2015/01/18/openssl-self-sign-ca&#34;&gt;基于OpenSSL自建CA和颁发SSL证书 &lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;首先简单区分一下HTTPS、SSL、OpenSSL三者的关系：&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-安全&#34;&gt;title: 基于OpenSSL自建CA和颁发SSL证书
date: 2015-01-18 01:21:25
updated: 2015-01-18 10:46:23
tags: [openssl, ssl,ca]
categories: 安全&lt;/h2&gt;
&lt;p&gt;关于SSL/TLS介绍见文章 &lt;a href=&#34;http://seanlook.com/2015/01/07/tls-ssl&#34;&gt;SSL/TLS原理详解&lt;/a&gt;。
关于证书授权中心CA以及数字证书等概念，请移步 &lt;a href=&#34;http://seanlook.com/2015/01/15/openssl-certificate-encryption&#34;&gt;OpenSSL 与 SSL 数字证书概念贴&lt;/a&gt; 。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-oracle&#34;&gt;title: Oracle单实例安装环境一键配置脚本（CentOS6 + 11gR2 ）
date: 2014-12-02 15:21:25
updated: 2014-12-03 00:46:23
tags: [oracle, centos, shell, installation]
categories: Oracle&lt;/h2&gt;
&lt;p&gt;这是自己曾经写的一个oracle 11gR2在CentOS6 x86_64服务器上，一键配置安装环境的脚本，能快速完成安装前环境的配置。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux&#34;&gt;title: rpm或yum安装软件提示error-rpmts_HdrFromFdno-key-ID-BAD
date: 2015-03-02 01:21:25
updated: 2015-03-02 00:46:23
tags: [linux, 软件包,troubleshooting]
categories: Linux&lt;/h2&gt;
&lt;h1 id=&#34;问题&#34;&gt;问题&lt;/h1&gt;
&lt;p&gt;在 CentOS 6.4 x86_64 上无论通过yum或rpm安装软件时，出现以下错误：&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux&#34;&gt;title: Linux下同步工具inotify+rsync使用详解
date: 2014-12-12 01:21:25
updated: 2014-12-12 00:46:23
tags: [rsync,inotify,backup，文件同步]
categories: Linux&lt;/h2&gt;
&lt;h1 id=&#34;1-rsync&#34;&gt;1. rsync&lt;/h1&gt;
&lt;h2 id=&#34;11-什么是rsync&#34;&gt;1.1 什么是rsync&lt;/h2&gt;
&lt;p&gt;rsync是一个远程数据同步工具，可通过LAN/WAN快速同步多台主机间的文件。它使用所谓的“Rsync演算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。所以通常可以作为备份工具来使用。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux&#34;&gt;title: Linux下rar及zip压缩包中批量替换某文件脚本
date: 2015-01-29 18:21:25
updated: 2015-01-30 11:46:23
tags: [script, shell]
categories: Linux&lt;/h2&gt;
&lt;p&gt;本需求是自己负责的一个生产系统上，有大量以zip和rar结尾的压缩文件散落在文件系统的各个文件夹，先在需要把压缩包里包含某一个特定文件（如tftpd32.exe或Tftpd32.exe，版本较旧），全都替换成比较新的tftpd32.exe版本。压缩文件总数约5000个，需要替换的数量约1500个。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux&#34;&gt;title: tar命令高级用法——备份数据
date: 2014-12-08 01:21:25
updated: 2014-12-09 00:46:23
tags: [linux命令,tar,backup]
categories: Linux&lt;/h2&gt;
&lt;p&gt;Linux上有功能强大的tar命令，tar最初是为了制作磁带备份（tape archive）而设计的，它的作用是把文件和目录备份到磁带中，然后从磁带中提取或恢复文件。现在我们可以使用tar来备份数据到任何存储介质上。它是文件级备份，不必考虑底层文件系统类别，并且支持增量备份。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-feel&#34;&gt;title: 关于研究生的一点担忧
date: 2014-11-30 18:21:25
updated: 2014-11-30 20:46:23
tags: [feelings, graduate]
categories: Feel&lt;/h2&gt;
&lt;p&gt;最近有个在大学玩的比较好现在在读研的同学，来询问我一些如何给老师做精品课程在线测试系统的问题，从沟通中我忍不住从个人的角度来表达一下感想和担忧。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux&#34;&gt;title: SSL/TLS原理详解
date: 2015-01-07 01:21:25
updated: 2015-01-07 10:46:23
tags: [ssl, tls, 安全]
categories: Linux&lt;/h2&gt;
&lt;p&gt;本文大部分整理自网络，相关文章请见文后参考。&lt;/p&gt;
&lt;p&gt;关于证书授权中心CA以及数字证书等概念，请移步 &lt;a href=&#34;http://seanlook.com/2015/01/15/openssl-certificate-encryption&#34;&gt;OpenSSL 与 SSL 数字证书概念贴&lt;/a&gt; ，如果你想快速自建CA然后签发数字证书，请移步 &lt;a href=&#34;http://seanlook.com/2015/01/18/openssl-self-sign-ca&#34;&gt;基于OpenSSL自建CA和颁发SSL证书 &lt;/a&gt; 。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux-centos&#34;&gt;title: CentOS 6.x 内核升级（2.6.32 -&amp;gt; 3.10.58）过程记录
date: 2014-10-24 01:21:25
updated: 2014-10-27 10:46:23
tags: [docker, Linux内核, upgrade]
categories: [Linux, CentOS]&lt;/h2&gt;
&lt;p&gt;本人升级的目的是想在CentOS6.2上运行docker，官方建议内核版本在3.8.0及以上，于是就自己从Linux内核官方网站上下载源码，自己编译。
##1. 准备工作##
###1.1 确认内核及版本信息###&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-linux&#34;&gt;title: vim编辑器技巧备忘（初级-中级）
date: 2014-08-07 01:21:25
updated: 2014-08-07-12 00:46:23
tags: [vim,编辑器]
categories: Linux&lt;/h2&gt;
&lt;p&gt;“学习vim并且其会成为你最后一个使用的文本编辑器”
学习建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;丢弃鼠标和小键盘&lt;/li&gt;
&lt;li&gt;具有搭配使用各种按键的意识&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先来一张 &lt;a href=&#34;http://jrmiii.com/2009/03/06/learning-vim-the-pragmatic-way.html&#34;&gt;mindmap&lt;/a&gt; :&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/1/01/</guid>
      <description>&lt;h2 id=&#34;categories-virtualization&#34;&gt;title: 误删vSphere虚拟机.vmdk文件的恢复
date: 2014-10-28 15:21:25
updated: 2014-10-28 00:46:23
tags: [vsphere, 虚拟化,troubleshooting]
categories: Virtualization&lt;/h2&gt;
&lt;h2 id=&#34;1-错误描述&#34;&gt;1. 错误描述&lt;/h2&gt;
&lt;p&gt;在vSphere上，一次重启虚拟服务器时出现启动不了，提示找不到vmdk虚拟磁盘文件：
&lt;img alt=&#34;vmdk_not_found&#34; loading=&#34;lazy&#34; src=&#34;http://sean-images.qiniudn.com/vmdk_not_found.png&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
