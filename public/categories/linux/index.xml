<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Linux on Sean&#39;s Note</title>
    <link>http://localhost:1313/categories/linux/</link>
    <description>Recent content in Linux on Sean&#39;s Note</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Jun 2015 16:32:49 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>解答一个关于日志系统的思路</title>
      <link>http://localhost:1313/2015/06/gongshi-logsystem-elk-preview/</link>
      <pubDate>Tue, 09 Jun 2015 16:32:49 +0000</pubDate>
      <guid>http://localhost:1313/2015/06/gongshi-logsystem-elk-preview/</guid>
      <description>&lt;p&gt;在一个群里看到一个面试题，试着去解答一下，毕竟正好花时间了解过日志这方面的内容。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;希望能达到的使用场景：&lt;/p&gt;
&lt;p&gt;在写业务逻辑时也能进行结构化的log, 并且log被转移到一个数据库， 一个UI前端以这个log数据库为支持， 可以可视化各种指标， 并且保留未来可以对指标进行alarm的可能性&lt;/p&gt;</description>
    </item>
    <item>
      <title>nginx做负载均衡器以及proxy缓存配置</title>
      <link>http://localhost:1313/2015/06/nginx-cache-check/</link>
      <pubDate>Tue, 02 Jun 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/06/nginx-cache-check/</guid>
      <description>&lt;p&gt;关于nginx的安装和基本配置请参考&lt;a href=&#34;http://xgknight.com/2015/05/17/nginx-install-and-config&#34;&gt;nginx&lt;/a&gt;，本文在原基础上完成以下几个功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;结合proxy和upstream模块实现nginx负载均衡&lt;/li&gt;
&lt;li&gt;结合&lt;code&gt;nginx_upstream_check_module&lt;/code&gt;模块实现后端服务器的健康检查&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;nginx-sticky-module&lt;/code&gt;扩展模块实现Cookie会话黏贴（session-sticky效果）&lt;/li&gt;
&lt;li&gt;使用proxy模块实现静态文件缓存&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;ngx_cache_purge&lt;/code&gt;实现更强大的缓存清除功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1-安装及模块说明&#34;&gt;1. 安装及模块说明&lt;/h1&gt;
&lt;p&gt;上面提到的3个模块都属于第三方扩展模块，需要提前下好源码，然后编译时通过&lt;code&gt;--add-moudle=src_path&lt;/code&gt;一起安装。&lt;/p&gt;</description>
    </item>
    <item>
      <title>nginx配置ssl加密（单双向认证、部分https）</title>
      <link>http://localhost:1313/2015/05/nginx-ssl/</link>
      <pubDate>Thu, 28 May 2015 15:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/05/nginx-ssl/</guid>
      <description>&lt;p&gt;nginx下配置ssl本来是很简单的，无论是去认证中心买SSL安全证书还是自签署证书，但最近公司OA的一个需求，得以有个机会实际折腾一番。一开始采用的是全站加密，所有访问http:80的请求强制转换（rewrite）到https，后来自动化测试结果说响应速度太慢，https比http慢慢30倍，心想怎么可能，鬼知道他们怎么测的。所以就试了一下部分页面https（不能只针对某类动态请求才加密）和双向认证。下面分节介绍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nginx&#43;Keepalived实现站点高可用</title>
      <link>http://localhost:1313/2015/05/nginx-keepalived-ha/</link>
      <pubDate>Mon, 18 May 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/05/nginx-keepalived-ha/</guid>
      <description>&lt;p&gt;公司内部 OA 系统要做线上高可用，避免单点故障，所以计划使用2台虚拟机通过 Keepalived 工具来实现 nginx 的高可用（High Avaiability），达到一台nginx入口服务器宕机，另一台备机自动接管服务的效果。（nginx做反向代理，实现后端应用服务器的负载均衡）快速搭建请直接跳至 第2节。&lt;/p&gt;</description>
    </item>
    <item>
      <title>nginx配置location总结及rewrite规则写法</title>
      <link>http://localhost:1313/2015/05/nginx-location-rewrite/</link>
      <pubDate>Sun, 17 May 2015 15:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/05/nginx-location-rewrite/</guid>
      <description>&lt;h1 id=&#34;1-location正则写法&#34;&gt;1. location正则写法&lt;/h1&gt;
&lt;p&gt;一个示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;location  = / {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # 精确匹配 / ，主机名后面不能带任何字符串
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  [ configuration A ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;location  / {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # 因为所有的地址都以 / 开头，所以这条规则将匹配到所有请求
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # 但是正则和最长字符串会优先匹配
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  [ configuration B ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;location /documents/ {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # 只有后面的正则表达式没有匹配到时，这一条才会采用这一条
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  [ configuration C ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;location ~ /documents/Abc {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # 匹配任何以 /documents/Abc 开头的地址，匹配符合以后，还要继续往下搜索
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # 只有后面的正则表达式没有匹配到时，这一条才会采用这一条
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  [ configuration CC ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;location ^~ /images/ {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # 匹配任何以 /images/ 开头的地址，匹配符合以后，停止往下搜索正则，采用这一条。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  [ configuration D ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;location ~* \.(gif|jpg|jpeg)$ {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # 匹配所有以 gif,jpg或jpeg 结尾的请求
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # 然而，所有请求 /images/ 下的图片会被 config D 处理，因为 ^~ 到达不了这一条正则
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  [ configuration E ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;location /images/ {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # 字符匹配到 /images/，继续往下，会发现 ^~ 存在
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  [ configuration F ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;location /images/abc {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # 最长字符匹配到 /images/abc，继续往下，会发现 ^~ 存在
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # F与G的放置顺序是没有关系的
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  [ configuration G ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;location ~ /images/abc/ {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # 只有去掉 config D 才有效：先最长匹配 config G 开头的地址，继续往下搜索，匹配到这一条正则，采用
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [ configuration H ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;location ~* /js/.*/\.js
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;已&lt;code&gt;=&lt;/code&gt;开头表示精确匹配
如 A 中只匹配根目录结尾的请求，后面不能带任何字符串。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^~&lt;/code&gt; 开头表示uri以某个常规字符串开头，不是正则匹配&lt;/li&gt;
&lt;li&gt;~ 开头表示区分大小写的正则匹配;&lt;/li&gt;
&lt;li&gt;~* 开头表示不区分大小写的正则匹配&lt;/li&gt;
&lt;li&gt;/ 通用匹配, 如果没有其它匹配,任何请求都会匹配到&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;顺序 no优先级：
(location =) &amp;gt; (location 完整路径) &amp;gt; (location ^~ 路径) &amp;gt; (location &lt;del&gt;,&lt;/del&gt;* 正则顺序) &amp;gt; (location 部分起始路径) &amp;gt; (/)&lt;/p&gt;</description>
    </item>
    <item>
      <title>nginx服务器安装及配置文件详解</title>
      <link>http://localhost:1313/2015/05/nginx-install-and-config/</link>
      <pubDate>Sun, 17 May 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/05/nginx-install-and-config/</guid>
      <description>&lt;p&gt;nginx在工作中已经有好几个环境在使用了，每次都是重新去网上扒博客，各种编译配置，今天自己也整理一份安装文档和nginx.conf配置选项的说明，留作以后参考。像负载均衡配置（包括健康检查）、缓存（包括清空缓存）配置实例，请参考 &lt;a href=&#34;http://xgknight.com/2015/05/17/nginx-install-and-config&#34;&gt;http://xgknight.com/2015/05/17/nginx-install-and-config&lt;/a&gt; ，ssl加密请参考 &lt;a href=&#34;http://xgknight.com/2015/05/28/nginx-ssl/&#34;&gt;http://xgknight.com/2015/05/28/nginx-ssl/&lt;/a&gt; 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>仿豆丁网文件在线浏览解决方案搭建</title>
      <link>http://localhost:1313/2015/05/pdf2swf-preview/</link>
      <pubDate>Wed, 13 May 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/05/pdf2swf-preview/</guid>
      <description>&lt;p&gt;在公司OA和CRM系统遇到要实现在线查看word/jpg等文件的功能，按照开发小组的要求搭建了一套解决方案：OpenOffice + JodConvertor  + SWFTool+ FlexPaper，其中OpenOffice + JodConvertor用于将文档转化为PDF格式文档，SwfTool用于将PDF转化为SWF文档，FlexPaper用于展示。使用这个解决方案的最大好处就是跨平台且较为简单。&lt;/p&gt;</description>
    </item>
    <item>
      <title>lsyncd实时同步搭建指南——取代rsync&#43;inotify</title>
      <link>http://localhost:1313/2015/05/lsyncd-synchronize-realtime/</link>
      <pubDate>Wed, 06 May 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/05/lsyncd-synchronize-realtime/</guid>
      <description>&lt;h1 id=&#34;1-几大实时同步工具比较&#34;&gt;1. 几大实时同步工具比较&lt;/h1&gt;
&lt;h2 id=&#34;11-inotify--rsync&#34;&gt;1.1 inotify + rsync&lt;/h2&gt;
&lt;p&gt;最近一直在寻求生产服务服务器上的同步替代方案，原先使用的是&lt;code&gt;inotify +  rsync&lt;/code&gt;，但随着文件数量的增大到100W+，目录下的文件列表就达20M，在网络状况不佳或者限速的情况下，变更的文件可能10来个才几M，却因此要发送的文件列表就达20M，严重减低的带宽的使用效率以及同步效率；更为要紧的是，加入inotifywait在5s内监控到10个小文件发生变化，便会触发10个rsync同步操作，结果就是真正需要传输的才2-3M的文件，比对的文件列表就达200M。使用这两个组合的好处在于，它们都是最基本的软件，可以通过不同选项做到很精确的控制，比如排除同步的目录，同步多个模块或同步到多个主机。&lt;/p&gt;</description>
    </item>
    <item>
      <title>iscsi网络存储介绍及客户端配置操作</title>
      <link>http://localhost:1313/2015/04/iscsi-san-initiator/</link>
      <pubDate>Tue, 28 Apr 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/04/iscsi-san-initiator/</guid>
      <description>&lt;p&gt;本文不介绍iSCSI服务端的搭建过程，不然就会很累赘。主题就是怎么去完成iscsi网络存储的挂载过程，并顺带介绍一些必要的概念。&lt;/p&gt;
&lt;h1 id=&#34;1-iscsi介绍与initiator安装&#34;&gt;1. iscsi介绍与initiator安装&lt;/h1&gt;
&lt;h2 id=&#34;11-iscsi介绍&#34;&gt;1.1 iSCSI介绍&lt;/h2&gt;
&lt;p&gt;iSCSI简单来说，就是把SCSI指令通过TCP/IP协议封装起来，在以太网中传输。iSCSI 可以实现在IP网络上传递和运行SCSI协议，使其能够在诸如高速千兆以太网上进行数据存取，实现了数据的网际传递和管理。基于iSCSI建立的存储区域网（SAN）与基于光纤的FC-SAN相比，具有很好的性价比。&lt;/p&gt;</description>
    </item>
    <item>
      <title>怎么用pfSense为你的web服务做负载均衡（翻译）</title>
      <link>http://localhost:1313/2015/04/pfsense-loadbalancer/</link>
      <pubDate>Fri, 24 Apr 2015 15:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/04/pfsense-loadbalancer/</guid>
      <description>&lt;p&gt;本文翻译自Howtoforge上的一篇文章 &lt;a href=&#34;https://www.howtoforge.com/how-to-use-pfsense-to-load-balance-your-web-servers&#34;&gt;How To Use pfSense To Load Balance Your Web Servers&lt;/a&gt;。注意pfSense的负载均衡有两种：一是设置&lt;a href=&#34;https://doc.pfsense.org/index.php/Multi-WAN&#34;&gt;多个WAN做双线负载均衡&lt;/a&gt;，二是本文的为LAN内的&lt;a href=&#34;https://doc.pfsense.org/index.php/Inbound_Load_Balancing&#34;&gt;web服务器做inbound-loadbalancer&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这篇howto中展示了怎么使用pfSense 2.0 为你的多个web服务器配置负载均衡（load balancer）。这里假定在你的网络环境中已经拥有了一个pfSense服务器和2个以上的apache服务器，并且具有一定的pfSense知识。（&lt;em&gt;参考&lt;a href=&#34;http://xgknight.com/2015/04/23/pfsense-usage/&#34;&gt;图解pfSense软路由系统的使用（NAT功能&lt;/a&gt;&lt;/em&gt;）&lt;/p&gt;</description>
    </item>
    <item>
      <title>图解pfSense软路由系统的使用（NAT功能）</title>
      <link>http://localhost:1313/2015/04/pfsense-usage/</link>
      <pubDate>Thu, 23 Apr 2015 15:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/04/pfsense-usage/</guid>
      <description>&lt;p&gt;pfsense是一款开源的路由和防火墙产品，它基于freebsd系统定制和开发。pfsene拥有友好的web的配置界面，且具有伸缩性强又不失强大性能，在众多开源网络防火墙中属于佼佼者。&lt;/p&gt;</description>
    </item>
    <item>
      <title>php5.3连接oracle的客户端及pdo_oci模块安装</title>
      <link>http://localhost:1313/2015/03/install-pdo-oci-oci8-phpext/</link>
      <pubDate>Tue, 10 Mar 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/03/install-pdo-oci-oci8-phpext/</guid>
      <description>&lt;p&gt;php连接oracle数据库虽然不是最佳拍档，但组内开发确实有这样需求。如果没有参考合适的文档，这个过程还是挺折磨人的，下面是一个记录，原型是国外的一篇博客 &lt;a href=&#34;http://shiki.me/blog/installing-pdo_oci-and-oci8-php-extensions-on-centos-6-4-64bit/&#34;&gt;Installing PDO_OCI and OCI8 PHP extensions on CentOS 6.4 64bit&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>rpm或yum安装软件提示error-rpmts_HdrFromFdno-key-ID-BAD</title>
      <link>http://localhost:1313/2015/03/rpm-yum-recover/</link>
      <pubDate>Mon, 02 Mar 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/03/rpm-yum-recover/</guid>
      <description>&lt;h1 id=&#34;问题&#34;&gt;问题&lt;/h1&gt;
&lt;p&gt;在 CentOS 6.4 x86_64 上无论通过yum或rpm安装软件时，出现以下错误：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;yum&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;glibc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;devel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rpmts_HdrFromFdno&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Header&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;V3&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;RSA&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SHA1&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Signature&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ID&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c105b9de&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BAD&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Problem&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;opening&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;el6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x86_64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;rpm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;rpm -ivh&lt;/code&gt;单独去安装软件也提示上面的错误。&lt;code&gt;rpm -qa&lt;/code&gt; 无法列出系统中安装过的软件包，但许多库文件和软件命令是存在的。也尝试过&lt;code&gt;rpm --rebuilddb&lt;/code&gt;来重建数据库，但情况依然没有得到改善（centos官网说千万不要在系统broken的情况下rebuilddb，不然有可能变成destroy）&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux下rar及zip压缩包中批量替换某文件脚本</title>
      <link>http://localhost:1313/2015/01/shell-batch-replace-files-from-rar-zip/</link>
      <pubDate>Thu, 29 Jan 2015 18:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/01/shell-batch-replace-files-from-rar-zip/</guid>
      <description>&lt;p&gt;本需求是自己负责的一个生产系统上，有大量以zip和rar结尾的压缩文件散落在文件系统的各个文件夹，先在需要把压缩包里包含某一个特定文件（如tftpd32.exe或Tftpd32.exe，版本较旧），全都替换成比较新的tftpd32.exe版本。压缩文件总数约5000个，需要替换的数量约1500个。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LDIF修改ldap记录或配置示例</title>
      <link>http://localhost:1313/2015/01/openldap_ldif_example/</link>
      <pubDate>Thu, 22 Jan 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/01/openldap_ldif_example/</guid>
      <description>&lt;p&gt;可以说LDIF文件是OpenLDAP操作数据或修改配置的一切来源，下面是实际通过客户端工具操作的具体示例。（openldap安装及配置过程见&lt;a href=&#34;http://xgknight.com/2015/01/21/openldap-install-guide-ssl/&#34;&gt;这里&lt;/a&gt;）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenLDAP(2.4.3x)服务器搭建及配置说明</title>
      <link>http://localhost:1313/2015/01/openldap-install-guide-ssl/</link>
      <pubDate>Wed, 21 Jan 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/01/openldap-install-guide-ssl/</guid>
      <description>&lt;p&gt;本文采用的是从源码编译安装，适合Ubuntu和CentOS平台，通过&lt;code&gt;apt-get&lt;/code&gt;或&lt;code&gt;yum&lt;/code&gt;方式安装参考补充部分。openldap原理介绍参考&lt;a href=&#34;http://xgknight.com/2015/01/15/openldap_introduction/&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LDAP服务器的概念和原理简单介绍</title>
      <link>http://localhost:1313/2015/01/openldap_introduction/</link>
      <pubDate>Thu, 15 Jan 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/01/openldap_introduction/</guid>
      <description>&lt;h2 id=&#34;1-目录服务&#34;&gt;1. 目录服务&lt;/h2&gt;
&lt;p&gt;目录是一个为查询、浏览和搜索而优化的专业分布式数据库，它呈树状结构组织数据，就好象Linux/Unix系统中的文件目录一样。目录数据库和关系数据库不同，它有优异的读性能，但写性能差，并且没有事务处理、回滚等复杂功能，不适于存储修改频繁的数据。所以目录天生是用来查询的，就好象它的名字一样。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SSL/TLS原理详解</title>
      <link>http://localhost:1313/2015/01/tls-ssl/</link>
      <pubDate>Wed, 07 Jan 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/01/tls-ssl/</guid>
      <description>&lt;p&gt;本文大部分整理自网络，相关文章请见文后参考。&lt;/p&gt;
&lt;p&gt;关于证书授权中心CA以及数字证书等概念，请移步 &lt;a href=&#34;http://xgknight.com/2015/01/15/openssl-certificate-encryption&#34;&gt;OpenSSL 与 SSL 数字证书概念贴&lt;/a&gt; ，如果你想快速自建CA然后签发数字证书，请移步 &lt;a href=&#34;http://xgknight.com/2015/01/18/openssl-self-sign-ca&#34;&gt;基于OpenSSL自建CA和颁发SSL证书 &lt;/a&gt; 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux下同步工具inotify&#43;rsync使用详解</title>
      <link>http://localhost:1313/2014/12/rsync_inotify_setup/</link>
      <pubDate>Fri, 12 Dec 2014 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2014/12/rsync_inotify_setup/</guid>
      <description>&lt;h1 id=&#34;1-rsync&#34;&gt;1. rsync&lt;/h1&gt;
&lt;h2 id=&#34;11-什么是rsync&#34;&gt;1.1 什么是rsync&lt;/h2&gt;
&lt;p&gt;rsync是一个远程数据同步工具，可通过LAN/WAN快速同步多台主机间的文件。它使用所谓的“Rsync演算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。所以通常可以作为备份工具来使用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>tar命令高级用法——备份数据</title>
      <link>http://localhost:1313/2014/12/tar_backup_filesystem/</link>
      <pubDate>Mon, 08 Dec 2014 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2014/12/tar_backup_filesystem/</guid>
      <description>&lt;p&gt;Linux上有功能强大的tar命令，tar最初是为了制作磁带备份（tape archive）而设计的，它的作用是把文件和目录备份到磁带中，然后从磁带中提取或恢复文件。现在我们可以使用tar来备份数据到任何存储介质上。它是文件级备份，不必考虑底层文件系统类别，并且支持增量备份。&lt;/p&gt;</description>
    </item>
    <item>
      <title>记一次错误卸载软件包导致Linux系统崩溃的修复解决过程</title>
      <link>http://localhost:1313/2014/11/one-troubleshooting-for-centos-corrupt/</link>
      <pubDate>Mon, 03 Nov 2014 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2014/11/one-troubleshooting-for-centos-corrupt/</guid>
      <description>&lt;p&gt;首先问题产生的缘由很简单，是我一同事在安装oracle一套软件时，按照要求需要binutils软件包的32位版本，然而在Oracle Linux已经装有64位，按理说是可以安装i686的，我猜应该是32位的版本低于这个已有的64位所以导致冲突而安装失败，因此同事就用&lt;code&gt;yum remove binutils&lt;/code&gt;，这个命令也奇葩，由于是root权限导致依赖于它的200多个软件包也被卸载，最终导致网络断开，系统崩溃，在vSphere虚拟机上重新启动发现再也起不来。下面看问题：&lt;/p&gt;</description>
    </item>
    <item>
      <title>docker常用管理命令（上）</title>
      <link>http://localhost:1313/2014/10/docker-command-best-use-1/</link>
      <pubDate>Fri, 31 Oct 2014 20:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2014/10/docker-command-best-use-1/</guid>
      <description>&lt;p&gt;本文只记录docker命令在大部分情境下的使用，如果想了解每一个选项的细节，请参考官方文档，这里只作为自己以后的备忘记录下来。&lt;/p&gt;
&lt;p&gt;根据自己的理解，总的来说分为以下几种：
容器生命周期管理 — &lt;code&gt;docker [run|start|stop|restart|kill|rm|pause|unpause]&lt;/code&gt;
容器操作运维 — &lt;code&gt;docker [ps|inspect|top|attach|events|logs|wait|export|port]&lt;/code&gt;
容器rootfs命令 — &lt;code&gt;docker [commit|cp|diff]&lt;/code&gt;
镜像仓库 — &lt;code&gt;docker [login|pull|push|search]&lt;/code&gt;
本地镜像管理 — &lt;code&gt;docker [images|rmi|tag|build|history|save|import]&lt;/code&gt;
其他命令 — &lt;code&gt;docker [info|version]&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>apache&#43;3tomcat&#43;jk&#43;memcached集群环境搭建</title>
      <link>http://localhost:1313/2014/10/apache-3tomcat-cluster-jk-memcached/</link>
      <pubDate>Wed, 29 Oct 2014 10:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2014/10/apache-3tomcat-cluster-jk-memcached/</guid>
      <description>&lt;p&gt;注意本文不讨论原理，只讲述具体的搭建过程，而且步骤都经过了整理，否则过程可能会出现其他异常，请自行google。apache与tomcat整合的方式除了jk之外，使用apache自带的mod_ajp_proxy模块也可以很方便的完成。
先来看一下架构图：
&lt;img alt=&#34;apache_tomcat_cluster_msm&#34; loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/apache_tomcat_cluster_msm.png&#34;&gt;
属于正式环境中原session复制方案的改进。&lt;/p&gt;</description>
    </item>
    <item>
      <title>CentOS 6.x 内核升级（2.6.32 -&gt; 3.10.58）过程记录</title>
      <link>http://localhost:1313/2014/10/upgrade-centos6_kernel-to-3.10.x/</link>
      <pubDate>Fri, 24 Oct 2014 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2014/10/upgrade-centos6_kernel-to-3.10.x/</guid>
      <description>&lt;p&gt;本人升级的目的是想在CentOS6.2上运行docker，官方建议内核版本在3.8.0及以上，于是就自己从Linux内核官方网站上下载源码，自己编译。
##1. 准备工作##
###1.1 确认内核及版本信息###&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux进阶培训-tplink</title>
      <link>http://localhost:1313/2014/10/linux-level2/</link>
      <pubDate>Mon, 06 Oct 2014 16:32:49 +0000</pubDate>
      <guid>http://localhost:1313/2014/10/linux-level2/</guid>
      <description>&lt;p&gt;本文没啥实际内容，是给新人做linux培训的第二课进阶篇，主要着眼于体系，把一些工具混个眼熟。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-01.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-02.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-03.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-04.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-05.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-06.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-07.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-08.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-09.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-10.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-11.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-12.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-13.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-14.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-15.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-16.PNG&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/linux-level2-17.PNG&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Linux磁盘管理(进阶)&lt;/li&gt;
&lt;li&gt;Linux内存管理&lt;/li&gt;
&lt;li&gt;Linux进程管理(进阶)&lt;/li&gt;
&lt;li&gt;Linux网络管理(进阶)&lt;/li&gt;
&lt;li&gt;Linux系统状态监控与调优&lt;/li&gt;
&lt;li&gt;常见服务&lt;/li&gt;
&lt;li&gt;Linux安全策略&lt;/li&gt;
&lt;li&gt;其他&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux磁盘管理进阶&#34;&gt;Linux磁盘管理（进阶）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ext4文件系统格式&lt;/li&gt;
&lt;li&gt;Inode、block、superblock、MBR&lt;/li&gt;
&lt;li&gt;VFS&lt;/li&gt;
&lt;li&gt;LVM&lt;/li&gt;
&lt;li&gt;pv、lv、vg&lt;/li&gt;
&lt;li&gt;lvdisplay、lvextend、vgdisplay、pvcreate…&lt;/li&gt;
&lt;li&gt;RAID&lt;/li&gt;
&lt;li&gt;raid0、raid1、raid5、raid10&lt;/li&gt;
&lt;li&gt;r/w速度、磁盘利用率、安全性的权衡&lt;/li&gt;
&lt;li&gt;磁盘IO性能
&lt;ul&gt;
&lt;li&gt;dd、iostat、iotop&lt;/li&gt;
&lt;li&gt;I/O等待&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux内存管里基础&#34;&gt;Linux内存管里（基础）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;物理内存与虚拟内存&lt;/li&gt;
&lt;li&gt;Swap space，分页存取&lt;/li&gt;
&lt;li&gt;buffer与cache区分&lt;/li&gt;
&lt;li&gt;内存监控命令&lt;/li&gt;
&lt;li&gt;free、vmstat&lt;/li&gt;
&lt;li&gt;/proc文件系统&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux进程管理进阶&#34;&gt;Linux进程管理（进阶）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;进程与线程&lt;/li&gt;
&lt;li&gt;进程优先级&lt;/li&gt;
&lt;li&gt;进程监控命令&lt;/li&gt;
&lt;li&gt;pidstat、lsof&lt;/li&gt;
&lt;li&gt;strace（系统调用跟踪）&lt;/li&gt;
&lt;li&gt;后台进程&lt;/li&gt;
&lt;li&gt;Ctrl+z、jobs、bg、fg、&amp;amp;、nohup&lt;/li&gt;
&lt;li&gt;screen&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux的网络管理&#34;&gt;Linux的网络管理&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一些概念&lt;/p&gt;</description>
    </item>
    <item>
      <title>CentOS 6 服务器安全配置指南（通用）</title>
      <link>http://localhost:1313/2014/09/linux-security-general-settings/</link>
      <pubDate>Sun, 07 Sep 2014 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2014/09/linux-security-general-settings/</guid>
      <description>&lt;p&gt;Linux是一个开放式系统，可以在网络上找到许多现成的程序和工具，这既方便了用户，也方便了黑客，因为他们也能很容易地找到程序和工具来潜入Linux系统，或者盗取Linux系统上的重要信息。不过，只要我们仔细地设定Linux的各种系统功能，并且加上必要的安全措施，就能让黑客们无机可乘。一般来说，对Linux系统的安全设定包括取消不必要的服务、限制远程存取、隐藏重要资料、修补安全漏洞、采用安全工具以及经常性的安全检查等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在Linux上使用logwatch分析监控日志文件</title>
      <link>http://localhost:1313/2014/08/linux-logwatch-usage/</link>
      <pubDate>Sat, 23 Aug 2014 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2014/08/linux-logwatch-usage/</guid>
      <description>&lt;h1 id=&#34;1-介绍&#34;&gt;1. 介绍&lt;/h1&gt;
&lt;p&gt;在维护Linux服务器时，经常需要查看系统中各种服务的日志，以检查服务器的运行状态。 如登陆历史、邮件、软件安装等日志。系统管理员一个个去检查会十分不方便；且大多时候，这会是一种被动的检查，即只有在发现系统运行异常时才会想到去查看日志以获取异常的信息。那么如何主动、集中的分析这些日志，并产生报告，定时发送给管理员就会显得十分重要。&lt;/p&gt;</description>
    </item>
    <item>
      <title>vim编辑器技巧备忘（初级-中级）</title>
      <link>http://localhost:1313/2014/08/vim-tips/</link>
      <pubDate>Thu, 07 Aug 2014 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2014/08/vim-tips/</guid>
      <description>&lt;p&gt;“学习vim并且其会成为你最后一个使用的文本编辑器”
学习建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;丢弃鼠标和小键盘&lt;/li&gt;
&lt;li&gt;具有搭配使用各种按键的意识&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先来一张 &lt;a href=&#34;http://jrmiii.com/2009/03/06/learning-vim-the-pragmatic-way.html&#34;&gt;mindmap&lt;/a&gt; :&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;vim-learn-card&#34; loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/Vim-mindmap.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-初级&#34;&gt;1. 初级&lt;/h1&gt;
&lt;h2 id=&#34;11-编辑模式insert-mode&#34;&gt;1.1 编辑模式（Insert Mode）&lt;/h2&gt;
&lt;p&gt;编辑模式包括以下动作：&lt;/p&gt;</description>
    </item>
    <item>
      <title>高效Linux bash快捷键及alias总结</title>
      <link>http://localhost:1313/2014/03/linux-bash/</link>
      <pubDate>Sun, 09 Mar 2014 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2014/03/linux-bash/</guid>
      <description>&lt;h2 id=&#34;bash快捷键&#34;&gt;bash快捷键&lt;/h2&gt;
&lt;p&gt;习惯使用编辑的快捷键可以大大提高效率，记忆学习过程要有意识的忽略功能键、方向键和数字小键盘。以下快捷键适用在bash处于默认的Emacs模式下，是由一个名为Readline的库实现的，用户可以通过命令bind添加新快捷键，或者修改系统中已经存在的快捷键。（如果你有&lt;code&gt;set -o vi&lt;/code&gt;，就处于 vi 模式就不适用了）&lt;/p&gt;</description>
    </item>
    <item>
      <title>iptables常用实例备查（更新中）</title>
      <link>http://localhost:1313/2014/02/iptables-example/</link>
      <pubDate>Wed, 26 Feb 2014 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2014/02/iptables-example/</guid>
      <description>&lt;h2 id=&#34;1-普通规则&#34;&gt;1. 普通规则&lt;/h2&gt;
&lt;h3 id=&#34;11-操作规则&#34;&gt;1.1 操作规则&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iptables -nL&lt;/code&gt;
查看本机关于iptables的设置情况，默认查看的是&lt;code&gt;-t filter&lt;/code&gt;，可以指定&lt;code&gt;-t nat&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iptables-save &amp;gt; iptables.rule&lt;/code&gt;
会保存当前的防火墙规则设置，命令行下通过iptables配置的规则在下次重启后会失效，当然这也是为了防止错误的配置防火墙。默认读取和保存的配置文件地址为&lt;code&gt;/etc/sysconfig/iptables&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>iptables防火墙原理详解</title>
      <link>http://localhost:1313/2014/02/iptables-understand/</link>
      <pubDate>Sun, 23 Feb 2014 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2014/02/iptables-understand/</guid>
      <description>&lt;h1 id=&#34;1-netfilter与iptables&#34;&gt;1. netfilter与iptables&lt;/h1&gt;
&lt;p&gt;Netfilter是由Rusty Russell提出的Linux 2.4内核防火墙框架，该框架既简洁又灵活，可实现安全策略应用中的许多功能，如数据包过滤、数据包处理、地址伪装、透明代理、动态网络地址转换(Network Address Translation，NAT)，以及基于用户及媒体访问控制(Media Access Control，MAC)地址的过滤和基于状态的过滤、包速率限制等。Iptables/Netfilter的这些规则可以通过灵活组合，形成非常多的功能、涵盖各个方面，这一切都得益于它的优秀设计思想。&lt;/p&gt;</description>
    </item>
    <item>
      <title>linux进程后台运行的几种方式</title>
      <link>http://localhost:1313/2014/02/linux-process-running-background-screen/</link>
      <pubDate>Thu, 20 Feb 2014 11:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2014/02/linux-process-running-background-screen/</guid>
      <description>&lt;h2 id=&#34;ctrlzbgnohupsetsid&#34;&gt;Ctrl+z/bg/nohup/setsid/&amp;amp;&lt;/h2&gt;
&lt;p&gt;在Linux中，如果要让进程在后台运行，一般情况下，我们在命令后面加上&amp;amp;即可，实际上，这样是将命令放入到一个作业队列中了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# ./rsync.sh &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# jobs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;对于已经在前台执行的命令，也可以重新放到后台执行，首先按ctrl+z暂停已经运行的进程，然后使用bg命令将停止的作业放到后台运行：&lt;code&gt;bg %1&lt;/code&gt;，放回前台运行：&lt;code&gt;%1&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
