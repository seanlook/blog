<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Proxysql on Sean&#39;s Note</title>
    <link>http://localhost:1313/tags/proxysql/</link>
    <description>Recent content in Proxysql on Sean&#39;s Note</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Jul 2017 21:32:49 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/proxysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ProxySQL监控方案</title>
      <link>http://localhost:1313/2017/07/mysql-proxysql-monitor/</link>
      <pubDate>Sun, 16 Jul 2017 21:32:49 +0000</pubDate>
      <guid>http://localhost:1313/2017/07/mysql-proxysql-monitor/</guid>
      <description>&lt;p&gt;ProxySQL能监控的信息不多，而且大部分是统计信息，不是性能数据。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;mysql&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;show&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tables&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;+--------------------------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tables&lt;/span&gt;                         &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;+--------------------------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;global_variables&lt;/span&gt;               &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stats_mysql_commands_counters&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stats_mysql_connection_pool&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stats_mysql_global&lt;/span&gt;             &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stats_mysql_processlist&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stats_mysql_query_digest&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stats_mysql_query_digest_reset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stats_mysql_query_rules&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;+--------------------------------+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;主要关心的指标都在表 &lt;code&gt;stats_mysql_global&lt;/code&gt; 里面，源代码 diamond 目录下有个 &lt;em&gt;proxysqlstat.py&lt;/em&gt; 脚本，是通过&lt;code&gt;SHOW MYSQL STATUS&lt;/code&gt;命令，由diamond收集进程将指标上报到Graphite。有以下几个Metrics：&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProxySQL高可用方案</title>
      <link>http://localhost:1313/2017/07/mysql-proxysql-ha-consul/</link>
      <pubDate>Sat, 15 Jul 2017 21:32:49 +0000</pubDate>
      <guid>http://localhost:1313/2017/07/mysql-proxysql-ha-consul/</guid>
      <description>&lt;p&gt;MySQL的高可用方案现在如 MHA, Galera, InnoDB Cluster，一旦在上游使用中间件之后，中间件本身可能成为单点。所以本文要介绍的是对于ProxySQL自身高可用的方案对比。
首先ProxySQL自身是通过Angel进程的形式运行，即proxysql如果有崩溃，主进程会自动拉起来。但如果是无响应或者网络故障，则需要另外的机制去做到服务的高可用。本文总结了四种方法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProxySQL之改进patch：记录查询sql完整样例与合并digest多个?</title>
      <link>http://localhost:1313/2017/04/mysql-proxysql-patch-querytext-sample/</link>
      <pubDate>Thu, 27 Apr 2017 15:32:49 +0000</pubDate>
      <guid>http://localhost:1313/2017/04/mysql-proxysql-patch-querytext-sample/</guid>
      <description>&lt;p&gt;近期一直在思考sql上线审核该怎么做，刚好接触到 ProxySQL 这个中间件，内置了一个计算sql指纹的功能，但是没有记录原始的sql语句。当前正有个紧急的拆库项目也希望知道库上所有的查询。于是把ProxySQL的代码下了回来研究了几天，改了把，加入了两个功能：&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProxySQL之性能测试对比</title>
      <link>http://localhost:1313/2017/04/mysql-proxysql-performance-test/</link>
      <pubDate>Thu, 20 Apr 2017 21:32:49 +0000</pubDate>
      <guid>http://localhost:1313/2017/04/mysql-proxysql-performance-test/</guid>
      <description>&lt;p&gt;本文会通过sysbench对ProxySQL进行基准测试，并与直连的性能进行对比。与此同时也对 Maxscale 和 Qihu360 Atlas 放在一起参考。
提示：压测前确保把query cache完全关掉。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProxySQL之连接复用（multiplexing）以及相关问题说明</title>
      <link>http://localhost:1313/2017/04/mysql-proxysql-multiplexing/</link>
      <pubDate>Mon, 17 Apr 2017 21:32:49 +0000</pubDate>
      <guid>http://localhost:1313/2017/04/mysql-proxysql-multiplexing/</guid>
      <description>&lt;p&gt;ProxySQL在连接池(&lt;em&gt;persistent connection poll&lt;/em&gt;)的基础上，还有一个连接复用的概念 &lt;em&gt;multiplexing connection&lt;/em&gt;，官方的wiki里没有很明确的说明，但在作者的一些 blog post 和 issue 里能找到解答： &lt;a href=&#34;https://github.com/sysown/proxysql/issues/939#issuecomment-287489317&#34;&gt;https://github.com/sysown/proxysql/issues/939#issuecomment-287489317&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProxySQL之读写分离与分库路由演示</title>
      <link>http://localhost:1313/2017/04/mysql-proxysql-route-rw_split/</link>
      <pubDate>Mon, 17 Apr 2017 15:32:49 +0000</pubDate>
      <guid>http://localhost:1313/2017/04/mysql-proxysql-route-rw_split/</guid>
      <description>&lt;p&gt;本文演示使用ProxySQL来完成读写分离和后端分库的一个实际配置过程，安装及配置项介绍见前文 &lt;a href=&#34;http://xgknight.com/2017/04/10/mysql-proxysql-install-config/&#34;&gt;ProxySQL之安装及配置详解&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;环境&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;instance0: 10.0.100.100 (db0,db2,db4,db6)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;instance1: 10.0.100.101 (db1,db3,db5,db7)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;instance2: 10.0.100.102 (db2,db6,db10,db14)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;instance3: 10.0.100.103 (db3,db7,db11,db15)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;instance0 slave: 192.168.10.4:3316
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;instance1 slave: 192.168.10.4:3326
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;instance2 slave: 192.168.10.4:3336
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;instance3 slave: 192.168.10.4:3346
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;proxysql node0: 10.0.100.36
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;现在想达到这样一个目的：客户端应用连接上 proxysql 的ip:port，连接时指定分库db名，执行sql时自动路由到对应的实例、对应的库。考虑下面的部署结构：
&lt;img alt=&#34;ProxySQL Deploy&#34; loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/proxysql-rw-lb-deploy.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProxySQL之安装及配置详解</title>
      <link>http://localhost:1313/2017/04/mysql-proxysql-install-config/</link>
      <pubDate>Mon, 10 Apr 2017 21:32:49 +0000</pubDate>
      <guid>http://localhost:1313/2017/04/mysql-proxysql-install-config/</guid>
      <description>&lt;p&gt;ProxySQL是一个高性能的MySQL中间件，拥有强大的规则引擎。具有以下特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;连接池，而且是 &lt;a href=&#34;http://xgknight.com/2017/04/17/mysql-proxysql-multiplexing/&#34;&gt;multiplexing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;主机和用户的最大连接数限制&lt;/li&gt;
&lt;li&gt;自动下线后端DB
&lt;ul&gt;
&lt;li&gt;延迟超过阀值&lt;/li&gt;
&lt;li&gt;ping 延迟超过阀值&lt;/li&gt;
&lt;li&gt;网络不通或宕机&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;强大的规则路由引擎&lt;/li&gt;
&lt;li&gt;实现读写分离&lt;/li&gt;
&lt;li&gt;查询重写&lt;/li&gt;
&lt;li&gt;sql流量镜像&lt;/li&gt;
&lt;li&gt;支持prepared statement&lt;/li&gt;
&lt;li&gt;支持Query Cache&lt;/li&gt;
&lt;li&gt;支持负载均衡，与gelera结合自动failover&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;集这么多优秀特性于一身，那么缺点呢就是项目不够成熟，好在作者一直在及时更新，并且受到 Percona 官方的支持。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
