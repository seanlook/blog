<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>SQL优化 on Sean&#39;s Note</title>
    <link>http://localhost:1313/tags/sql%E4%BC%98%E5%8C%96/</link>
    <description>Recent content in SQL优化 on Sean&#39;s Note</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Jun 2016 16:32:49 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/sql%E4%BC%98%E5%8C%96/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Advanced MySQL Query Tuning .pdf</title>
      <link>http://localhost:1313/2016/06/mysql-advanced-query-tuning-percona/</link>
      <pubDate>Sat, 11 Jun 2016 16:32:49 +0000</pubDate>
      <guid>http://localhost:1313/2016/06/mysql-advanced-query-tuning-percona/</guid>
      <description>&lt;p&gt;端午在家无聊，又不想学习。于是在Youtube随便逛，看到一个很不错的分享，来自 Percona Database Performance。下面是演示稿：&lt;/p&gt;
&lt;p&gt;slideshare: &lt;a href=&#34;http://www.slideshare.net/ssuser5a0bc0/webinar-2013-advancedquerytuning&#34;&gt;http://www.slideshare.net/ssuser5a0bc0/webinar-2013-advancedquerytuning&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;{% pdf &lt;a href=&#34;https://www.slideshare.net/slideshow/embed_code/key/3HLJJcJmM9KLGT&#34;&gt;https://www.slideshare.net/slideshow/embed_code/key/3HLJJcJmM9KLGT&lt;/a&gt; %}&lt;/p&gt;
&lt;p&gt;Youtube: &lt;a href=&#34;https://www.youtube.com/watch?v=TPFibi2G_oo&#34;&gt;https://www.youtube.com/watch?v=TPFibi2G_oo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;能 &lt;em&gt;条件&lt;/em&gt; 的可以看看。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL避免索引列使用 OR 条件</title>
      <link>http://localhost:1313/2016/04/mysql-avoid-or-query/</link>
      <pubDate>Tue, 05 Apr 2016 16:32:49 +0000</pubDate>
      <guid>http://localhost:1313/2016/04/mysql-avoid-or-query/</guid>
      <description>&lt;p&gt;这个亏已经吃过很多次了，在开发以前的sql代码里面，许多以 or 作为where条件的查询，甚至更新。这里举例来说明使用 or 的弊端，以及改进办法。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;select f_crm_id from d_dbname1.t_tbname1 where  f_xxx_id = 926067  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;and (f_mobile =&amp;#39;1234567891&amp;#39; or f_phone =&amp;#39;1234567891&amp;#39; ) limit 1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;从查询语句很容易看出，f_mobile和f_phone两个字段都有可能存电话号码，一般思路都是用 or 去一条sql解决，但表数据量一大简直是灾难：
&lt;img loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/mysql-avoid-or-1.png&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
