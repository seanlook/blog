<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ssl on Sean&#39;s Note</title>
    <link>http://localhost:1313/tags/ssl/</link>
    <description>Recent content in Ssl on Sean&#39;s Note</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 May 2015 15:21:25 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/ssl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>nginx配置ssl加密（单双向认证、部分https）</title>
      <link>http://localhost:1313/2015/05/nginx-ssl/</link>
      <pubDate>Thu, 28 May 2015 15:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/05/nginx-ssl/</guid>
      <description>&lt;p&gt;nginx下配置ssl本来是很简单的，无论是去认证中心买SSL安全证书还是自签署证书，但最近公司OA的一个需求，得以有个机会实际折腾一番。一开始采用的是全站加密，所有访问http:80的请求强制转换（rewrite）到https，后来自动化测试结果说响应速度太慢，https比http慢慢30倍，心想怎么可能，鬼知道他们怎么测的。所以就试了一下部分页面https（不能只针对某类动态请求才加密）和双向认证。下面分节介绍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>基于OpenSSL自建CA和颁发SSL证书</title>
      <link>http://localhost:1313/2015/01/openssl-self-sign-ca/</link>
      <pubDate>Sun, 18 Jan 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/01/openssl-self-sign-ca/</guid>
      <description>&lt;p&gt;关于SSL/TLS介绍见文章 &lt;a href=&#34;http://xgknight.com/2015/01/07/tls-ssl&#34;&gt;SSL/TLS原理详解&lt;/a&gt;。
关于证书授权中心CA以及数字证书等概念，请移步 &lt;a href=&#34;http://xgknight.com/2015/01/15/openssl-certificate-encryption&#34;&gt;OpenSSL 与 SSL 数字证书概念贴&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;openssl是一个开源程序的套件、这个套件有三个部分组成：一是&lt;code&gt;libcryto&lt;/code&gt;，这是一个具有通用功能的加密库，里面实现了众多的加密库；二是&lt;code&gt;libssl&lt;/code&gt;，这个是实现ssl机制的，它是用于实现TLS/SSL的功能；三是openssl，是个多功能命令行工具，它可以实现加密解密，甚至还可以当CA来用，可以让你创建证书、吊销证书。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenSSL 与 SSL 数字证书概念贴</title>
      <link>http://localhost:1313/2015/01/openssl-certificate-encryption/</link>
      <pubDate>Thu, 15 Jan 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/01/openssl-certificate-encryption/</guid>
      <description>&lt;p&gt;SSL/TLS 介绍见文章 &lt;a href=&#34;http://xgknight.com/2015/01/07/tls-ssl&#34;&gt;SSL/TLS原理详解&lt;/a&gt;。
如果你想快速自建CA然后签发数字证书，请移步 &lt;a href=&#34;http://xgknight.com/2015/01/18/openssl-self-sign-ca&#34;&gt;基于OpenSSL自建CA和颁发SSL证书 &lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;首先简单区分一下HTTPS、SSL、OpenSSL三者的关系：&lt;/p&gt;
&lt;p&gt;SSL是在客户端和服务器之间建立一条SSL安全通道的安全协议，而OpenSSL是TLS/SSL协议的开源实现，提供开发库和命令行程序。常说的HTTPS是HTTP的加密版，底层使用的加密协议是SSL。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SSL/TLS原理详解</title>
      <link>http://localhost:1313/2015/01/tls-ssl/</link>
      <pubDate>Wed, 07 Jan 2015 01:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2015/01/tls-ssl/</guid>
      <description>&lt;p&gt;本文大部分整理自网络，相关文章请见文后参考。&lt;/p&gt;
&lt;p&gt;关于证书授权中心CA以及数字证书等概念，请移步 &lt;a href=&#34;http://xgknight.com/2015/01/15/openssl-certificate-encryption&#34;&gt;OpenSSL 与 SSL 数字证书概念贴&lt;/a&gt; ，如果你想快速自建CA然后签发数字证书，请移步 &lt;a href=&#34;http://xgknight.com/2015/01/18/openssl-self-sign-ca&#34;&gt;基于OpenSSL自建CA和颁发SSL证书 &lt;/a&gt; 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>搭建docker内网私服（docker-registry with nginx&amp;ssl on centos）</title>
      <link>http://localhost:1313/2014/11/deploy-private-docker-registry-with-nginx-ssl/</link>
      <pubDate>Thu, 13 Nov 2014 20:21:25 +0000</pubDate>
      <guid>http://localhost:1313/2014/11/deploy-private-docker-registry-with-nginx-ssl/</guid>
      <description>&lt;p&gt;主要思路：
&lt;img alt=&#34;docker-registry-deploy&#34; loading=&#34;lazy&#34; src=&#34;http://github.com/seanlook/sean-notes-comment/raw/main/static/docker-registry-deploy.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-docker-registry-说明&#34;&gt;1. Docker Registry 说明&lt;/h2&gt;
&lt;p&gt;关于如何创建和使用本地仓库，其实已经有很多文章介绍了。因为docker技术正处于发展和完善阶段，所以有些文章要么内容已经过时，要么给出了错误的配置，导致无法正常创建仓库。本文记录的是个人完整的搭建过程，&lt;code&gt;docker version&lt;/code&gt;为1.1.2。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
