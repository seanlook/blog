<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>优化 on Sean&#39;s Note</title>
    <link>http://localhost:1313/tags/%E4%BC%98%E5%8C%96/</link>
    <description>Recent content in 优化 on Sean&#39;s Note</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Oct 2017 15:32:49 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E4%BC%98%E5%8C%96/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL order by limit 走错索引(range-&gt;indexscan)</title>
      <link>http://localhost:1313/2017/10/mysql-bad-plan-order_by-limit/</link>
      <pubDate>Thu, 26 Oct 2017 15:32:49 +0000</pubDate>
      <guid>http://localhost:1313/2017/10/mysql-bad-plan-order_by-limit/</guid>
      <description>&lt;p&gt;生产库遇到过好几例本文要讨论的案例，而且比较棘手。简而言之，有类似这样的查询 &lt;code&gt;SELECT * FROM t1 where t1.f2&amp;gt;1 and t2.f2&amp;lt;100 order by t1.id&lt;/code&gt;，id是主键，条件里面有个range查询，就会造成优化器是选择主键，还是选择filesort问题，有些特殊情况就会选错索引，比如为了回避内存排序，选择了主键扫描，导致原本走范围过滤再sort 500ms勉强可以结束的查询，5分钟不出结果。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
