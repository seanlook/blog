<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>表结构 on Sean&#39;s Note</title>
    <link>http://localhost:1313/tags/%E8%A1%A8%E7%BB%93%E6%9E%84/</link>
    <description>Recent content in 表结构 on Sean&#39;s Note</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Nov 2017 15:32:49 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E8%A1%A8%E7%BB%93%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL数据库表结构同步之SchemaSync</title>
      <link>http://localhost:1313/2017/11/mysql_schemasync/</link>
      <pubDate>Thu, 02 Nov 2017 15:32:49 +0000</pubDate>
      <guid>http://localhost:1313/2017/11/mysql_schemasync/</guid>
      <description>&lt;p&gt;SchemaSync是个能够在mysql数据库之间，比较并生成表结构差异的工具，项目地址 &lt;a href=&#34;https://github.com/mmatuson/SchemaSync&#34;&gt;https://github.com/mmatuson/SchemaSync&lt;/a&gt;  。&lt;/p&gt;
&lt;h1 id=&#34;schemasync介绍与使用&#34;&gt;SchemaSync介绍与使用&lt;/h1&gt;
&lt;p&gt;因为工作中经常需要在各个环境之间同步表结构，特别是生产与测试环境之间，长时间的运行后，总会有不一致的。测试环境的表结构一般是测试验证功能之后没有问题，然后通过工单的形式由DBA在生产环境修改。但生产库的结构，如修改索引，紧急修改字段长度，久而久之就会与测试环境有差异，需要同步到测试环境。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL数据库表结构同步之mysqldiff</title>
      <link>http://localhost:1313/2017/08/mysql_mysqldiff/</link>
      <pubDate>Sat, 05 Aug 2017 15:32:49 +0000</pubDate>
      <guid>http://localhost:1313/2017/08/mysql_mysqldiff/</guid>
      <description>&lt;h1 id=&#34;mysqldiff&#34;&gt;mysqldiff&lt;/h1&gt;
&lt;p&gt;mysql官方有个 &lt;a href=&#34;https://dev.mysql.com/doc/mysql-utilities/1.6/en/mysql-utils-install-rpm.html&#34;&gt;mysql-utilities 工具集&lt;/a&gt;，其中 mysqldiff 可用于比较两个db之间的表结构。
mysqldiff的语法格式是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ mysqldiff --server1=user:pass@host:port:socket --server2=user:pass@host:port:socket db1.object1:db2.object1 db3:db4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个语法有两个用法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;db1:db2&lt;/code&gt;：如果只指定数据库，那么就将两个数据库中互相缺少的对象显示出来，不比较对象里面的差异。这里的对象包括表、存储过程、函数、触发器等。
如果db1与db2名字相同，可以只指定 &lt;code&gt;db1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;db1.object1:db2.object1&lt;/code&gt;：如果指定了具体表对象，那么就会详细对比两个表的差异，包括表名、字段名、备注、索引、大小写等所有的表相关的对象。&lt;br&gt;
如果两边db和对象名都相同，可以只指定 &lt;code&gt;db1.object1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来看一些主要的参数：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
